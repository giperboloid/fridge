// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fridgems.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	fridgems.proto

It has these top-level messages:
	DevMeta
	SetDevInitConfigRequest
	SetDevInitConfigResponse
	SaveDevDataRequest
	SaveDevDataResponse
	PatchDevConfigRequest
	PatchDevConfigResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DevMeta struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Mac  string `protobuf:"bytes,3,opt,name=mac" json:"mac,omitempty"`
}

func (m *DevMeta) Reset()                    { *m = DevMeta{} }
func (m *DevMeta) String() string            { return proto.CompactTextString(m) }
func (*DevMeta) ProtoMessage()               {}
func (*DevMeta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DevMeta) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DevMeta) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DevMeta) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

type SetDevInitConfigRequest struct {
	Time int64    `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	Meta *DevMeta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
}

func (m *SetDevInitConfigRequest) Reset()                    { *m = SetDevInitConfigRequest{} }
func (m *SetDevInitConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*SetDevInitConfigRequest) ProtoMessage()               {}
func (*SetDevInitConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SetDevInitConfigRequest) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *SetDevInitConfigRequest) GetMeta() *DevMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type SetDevInitConfigResponse struct {
	Config []byte `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (m *SetDevInitConfigResponse) Reset()                    { *m = SetDevInitConfigResponse{} }
func (m *SetDevInitConfigResponse) String() string            { return proto.CompactTextString(m) }
func (*SetDevInitConfigResponse) ProtoMessage()               {}
func (*SetDevInitConfigResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SetDevInitConfigResponse) GetConfig() []byte {
	if m != nil {
		return m.Config
	}
	return nil
}

type SaveDevDataRequest struct {
	Time int64    `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	Meta *DevMeta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	Data []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *SaveDevDataRequest) Reset()                    { *m = SaveDevDataRequest{} }
func (m *SaveDevDataRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveDevDataRequest) ProtoMessage()               {}
func (*SaveDevDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SaveDevDataRequest) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *SaveDevDataRequest) GetMeta() *DevMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *SaveDevDataRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SaveDevDataResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *SaveDevDataResponse) Reset()                    { *m = SaveDevDataResponse{} }
func (m *SaveDevDataResponse) String() string            { return proto.CompactTextString(m) }
func (*SaveDevDataResponse) ProtoMessage()               {}
func (*SaveDevDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SaveDevDataResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type PatchDevConfigRequest struct {
	Config []byte `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (m *PatchDevConfigRequest) Reset()                    { *m = PatchDevConfigRequest{} }
func (m *PatchDevConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*PatchDevConfigRequest) ProtoMessage()               {}
func (*PatchDevConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PatchDevConfigRequest) GetConfig() []byte {
	if m != nil {
		return m.Config
	}
	return nil
}

type PatchDevConfigResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *PatchDevConfigResponse) Reset()                    { *m = PatchDevConfigResponse{} }
func (m *PatchDevConfigResponse) String() string            { return proto.CompactTextString(m) }
func (*PatchDevConfigResponse) ProtoMessage()               {}
func (*PatchDevConfigResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PatchDevConfigResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*DevMeta)(nil), "pb.DevMeta")
	proto.RegisterType((*SetDevInitConfigRequest)(nil), "pb.SetDevInitConfigRequest")
	proto.RegisterType((*SetDevInitConfigResponse)(nil), "pb.SetDevInitConfigResponse")
	proto.RegisterType((*SaveDevDataRequest)(nil), "pb.SaveDevDataRequest")
	proto.RegisterType((*SaveDevDataResponse)(nil), "pb.SaveDevDataResponse")
	proto.RegisterType((*PatchDevConfigRequest)(nil), "pb.PatchDevConfigRequest")
	proto.RegisterType((*PatchDevConfigResponse)(nil), "pb.PatchDevConfigResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CenterService service

type CenterServiceClient interface {
	SetDevInitConfig(ctx context.Context, in *SetDevInitConfigRequest, opts ...grpc.CallOption) (*SetDevInitConfigResponse, error)
	SaveDevData(ctx context.Context, in *SaveDevDataRequest, opts ...grpc.CallOption) (*SaveDevDataResponse, error)
}

type centerServiceClient struct {
	cc *grpc.ClientConn
}

func NewCenterServiceClient(cc *grpc.ClientConn) CenterServiceClient {
	return &centerServiceClient{cc}
}

func (c *centerServiceClient) SetDevInitConfig(ctx context.Context, in *SetDevInitConfigRequest, opts ...grpc.CallOption) (*SetDevInitConfigResponse, error) {
	out := new(SetDevInitConfigResponse)
	err := grpc.Invoke(ctx, "/pb.CenterService/SetDevInitConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centerServiceClient) SaveDevData(ctx context.Context, in *SaveDevDataRequest, opts ...grpc.CallOption) (*SaveDevDataResponse, error) {
	out := new(SaveDevDataResponse)
	err := grpc.Invoke(ctx, "/pb.CenterService/SaveDevData", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CenterService service

type CenterServiceServer interface {
	SetDevInitConfig(context.Context, *SetDevInitConfigRequest) (*SetDevInitConfigResponse, error)
	SaveDevData(context.Context, *SaveDevDataRequest) (*SaveDevDataResponse, error)
}

func RegisterCenterServiceServer(s *grpc.Server, srv CenterServiceServer) {
	s.RegisterService(&_CenterService_serviceDesc, srv)
}

func _CenterService_SetDevInitConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDevInitConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenterServiceServer).SetDevInitConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CenterService/SetDevInitConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenterServiceServer).SetDevInitConfig(ctx, req.(*SetDevInitConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenterService_SaveDevData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveDevDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenterServiceServer).SaveDevData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CenterService/SaveDevData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenterServiceServer).SaveDevData(ctx, req.(*SaveDevDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CenterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.CenterService",
	HandlerType: (*CenterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetDevInitConfig",
			Handler:    _CenterService_SetDevInitConfig_Handler,
		},
		{
			MethodName: "SaveDevData",
			Handler:    _CenterService_SaveDevData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fridgems.proto",
}

// Client API for DevService service

type DevServiceClient interface {
	PatchDevConfig(ctx context.Context, in *PatchDevConfigRequest, opts ...grpc.CallOption) (*PatchDevConfigResponse, error)
}

type devServiceClient struct {
	cc *grpc.ClientConn
}

func NewDevServiceClient(cc *grpc.ClientConn) DevServiceClient {
	return &devServiceClient{cc}
}

func (c *devServiceClient) PatchDevConfig(ctx context.Context, in *PatchDevConfigRequest, opts ...grpc.CallOption) (*PatchDevConfigResponse, error) {
	out := new(PatchDevConfigResponse)
	err := grpc.Invoke(ctx, "/pb.DevService/PatchDevConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DevService service

type DevServiceServer interface {
	PatchDevConfig(context.Context, *PatchDevConfigRequest) (*PatchDevConfigResponse, error)
}

func RegisterDevServiceServer(s *grpc.Server, srv DevServiceServer) {
	s.RegisterService(&_DevService_serviceDesc, srv)
}

func _DevService_PatchDevConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PatchDevConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevServiceServer).PatchDevConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DevService/PatchDevConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevServiceServer).PatchDevConfig(ctx, req.(*PatchDevConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DevService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.DevService",
	HandlerType: (*DevServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PatchDevConfig",
			Handler:    _DevService_PatchDevConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fridgems.proto",
}

func init() { proto.RegisterFile("fridgems.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0xcb, 0x4e, 0xc2, 0x50,
	0x10, 0x95, 0x47, 0x30, 0x0e, 0x48, 0xc8, 0x18, 0xa1, 0x56, 0x13, 0xcd, 0x5d, 0xb9, 0x11, 0x4d,
	0xfd, 0x01, 0x13, 0xba, 0x61, 0xe1, 0x23, 0x65, 0xe1, 0xca, 0xc5, 0xa5, 0x0c, 0xd8, 0x45, 0x1f,
	0xb6, 0xc3, 0x4d, 0xfc, 0x1d, 0xbf, 0xd4, 0xdc, 0xa1, 0x44, 0x81, 0xe2, 0xc6, 0xdd, 0x99, 0x33,
	0x9d, 0x33, 0x73, 0x4e, 0x2f, 0x74, 0xe7, 0x79, 0x34, 0x5b, 0x50, 0x5c, 0x0c, 0xb3, 0x3c, 0xe5,
	0x14, 0xeb, 0xd9, 0x54, 0x8d, 0xe0, 0xd0, 0x27, 0xf3, 0x48, 0xac, 0x11, 0xa1, 0xc9, 0x9f, 0x19,
	0x39, 0xb5, 0xab, 0xda, 0xf5, 0x51, 0x20, 0xd8, 0x72, 0x89, 0x8e, 0xc9, 0xa9, 0xaf, 0x38, 0x8b,
	0xb1, 0x07, 0x8d, 0x58, 0x87, 0x4e, 0x43, 0x28, 0x0b, 0xd5, 0x13, 0x0c, 0x26, 0xc4, 0x3e, 0x99,
	0x71, 0x12, 0xf1, 0x28, 0x4d, 0xe6, 0xd1, 0x22, 0xa0, 0x8f, 0x25, 0x15, 0x2c, 0xa2, 0x51, 0xbc,
	0x12, 0x6d, 0x04, 0x82, 0xf1, 0x12, 0x9a, 0x31, 0xb1, 0x16, 0xd1, 0xb6, 0xd7, 0x1e, 0x66, 0xd3,
	0x61, 0x79, 0x43, 0x20, 0x0d, 0xe5, 0x81, 0xb3, 0xab, 0x57, 0x64, 0x69, 0x52, 0x10, 0xf6, 0xa1,
	0x15, 0x0a, 0x23, 0x92, 0x9d, 0xa0, 0xac, 0xd4, 0x1b, 0xe0, 0x44, 0x1b, 0xf2, 0xc9, 0xf8, 0x9a,
	0xf5, 0x7f, 0xd6, 0xdb, 0xa1, 0x99, 0x66, 0x2d, 0x0e, 0x3b, 0x81, 0x60, 0x75, 0x03, 0x27, 0x1b,
	0xf2, 0x3f, 0xd7, 0x14, 0xac, 0x79, 0x59, 0x94, 0xa9, 0x95, 0x95, 0xba, 0x85, 0xd3, 0x17, 0xcd,
	0xe1, 0xbb, 0x4f, 0x66, 0x33, 0x8f, 0x7d, 0xe7, 0xdf, 0x41, 0x7f, 0x7b, 0xe0, 0xef, 0x15, 0xde,
	0x57, 0x0d, 0x8e, 0x47, 0x94, 0x30, 0xe5, 0x13, 0xca, 0x4d, 0x14, 0x12, 0x3e, 0x43, 0x6f, 0x3b,
	0x36, 0x3c, 0xb7, 0xf6, 0xf6, 0xfc, 0x1c, 0xf7, 0xa2, 0xba, 0xb9, 0x5a, 0xac, 0x0e, 0xf0, 0x01,
	0xda, 0xbf, 0x4c, 0x63, 0x5f, 0x3e, 0xdf, 0x09, 0xd9, 0x1d, 0xec, 0xf0, 0x6b, 0x05, 0xef, 0x15,
	0xc0, 0x27, 0xb3, 0x3e, 0x70, 0x0c, 0xdd, 0x4d, 0x93, 0x78, 0x66, 0x47, 0x2b, 0x93, 0x72, 0xdd,
	0xaa, 0xd6, 0x5a, 0x78, 0xda, 0x92, 0x27, 0x7c, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x7e, 0x3c,
	0xe2, 0x37, 0xd4, 0x02, 0x00, 0x00,
}
