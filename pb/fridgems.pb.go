// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fridgems.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	fridgems.proto

It has these top-level messages:
	DevMeta
	FridgeData
	SaveDevDataRequest
	SaveDevDataResponse
	SetInitConfigRequest
	SetInitConfigResponse
	GetDevConfigRequest
	GetDevConfigResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DevMeta struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Mac  string `protobuf:"bytes,3,opt,name=mac" json:"mac,omitempty"`
}

func (m *DevMeta) Reset()                    { *m = DevMeta{} }
func (m *DevMeta) String() string            { return proto.CompactTextString(m) }
func (*DevMeta) ProtoMessage()               {}
func (*DevMeta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DevMeta) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DevMeta) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DevMeta) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

type FridgeData struct {
	TempCam1 map[int64]float32 `protobuf:"bytes,1,rep,name=TempCam1" json:"TempCam1,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	TempCam2 map[int64]float32 `protobuf:"bytes,2,rep,name=TempCam2" json:"TempCam2,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
}

func (m *FridgeData) Reset()                    { *m = FridgeData{} }
func (m *FridgeData) String() string            { return proto.CompactTextString(m) }
func (*FridgeData) ProtoMessage()               {}
func (*FridgeData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FridgeData) GetTempCam1() map[int64]float32 {
	if m != nil {
		return m.TempCam1
	}
	return nil
}

func (m *FridgeData) GetTempCam2() map[int64]float32 {
	if m != nil {
		return m.TempCam2
	}
	return nil
}

type SaveDevDataRequest struct {
	Action string   `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Time   int64    `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Meta   *DevMeta `protobuf:"bytes,3,opt,name=meta" json:"meta,omitempty"`
	Data   []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *SaveDevDataRequest) Reset()                    { *m = SaveDevDataRequest{} }
func (m *SaveDevDataRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveDevDataRequest) ProtoMessage()               {}
func (*SaveDevDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SaveDevDataRequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *SaveDevDataRequest) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *SaveDevDataRequest) GetMeta() *DevMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *SaveDevDataRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SaveDevDataResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *SaveDevDataResponse) Reset()                    { *m = SaveDevDataResponse{} }
func (m *SaveDevDataResponse) String() string            { return proto.CompactTextString(m) }
func (*SaveDevDataResponse) ProtoMessage()               {}
func (*SaveDevDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SaveDevDataResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type SetInitConfigRequest struct {
	Time int64    `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	Meta *DevMeta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
}

func (m *SetInitConfigRequest) Reset()                    { *m = SetInitConfigRequest{} }
func (m *SetInitConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*SetInitConfigRequest) ProtoMessage()               {}
func (*SetInitConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SetInitConfigRequest) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *SetInitConfigRequest) GetMeta() *DevMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type SetInitConfigResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *SetInitConfigResponse) Reset()                    { *m = SetInitConfigResponse{} }
func (m *SetInitConfigResponse) String() string            { return proto.CompactTextString(m) }
func (*SetInitConfigResponse) ProtoMessage()               {}
func (*SetInitConfigResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SetInitConfigResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type GetDevConfigRequest struct {
	TurnedOn    bool   `protobuf:"varint,1,opt,name=turnedOn" json:"turnedOn,omitempty"`
	CollectFreq int64  `protobuf:"varint,2,opt,name=collectFreq" json:"collectFreq,omitempty"`
	SendFreq    int64  `protobuf:"varint,3,opt,name=sendFreq" json:"sendFreq,omitempty"`
	Mac         string `protobuf:"bytes,4,opt,name=mac" json:"mac,omitempty"`
}

func (m *GetDevConfigRequest) Reset()                    { *m = GetDevConfigRequest{} }
func (m *GetDevConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDevConfigRequest) ProtoMessage()               {}
func (*GetDevConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetDevConfigRequest) GetTurnedOn() bool {
	if m != nil {
		return m.TurnedOn
	}
	return false
}

func (m *GetDevConfigRequest) GetCollectFreq() int64 {
	if m != nil {
		return m.CollectFreq
	}
	return 0
}

func (m *GetDevConfigRequest) GetSendFreq() int64 {
	if m != nil {
		return m.SendFreq
	}
	return 0
}

func (m *GetDevConfigRequest) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

type GetDevConfigResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *GetDevConfigResponse) Reset()                    { *m = GetDevConfigResponse{} }
func (m *GetDevConfigResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDevConfigResponse) ProtoMessage()               {}
func (*GetDevConfigResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetDevConfigResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*DevMeta)(nil), "pb.DevMeta")
	proto.RegisterType((*FridgeData)(nil), "pb.FridgeData")
	proto.RegisterType((*SaveDevDataRequest)(nil), "pb.SaveDevDataRequest")
	proto.RegisterType((*SaveDevDataResponse)(nil), "pb.SaveDevDataResponse")
	proto.RegisterType((*SetInitConfigRequest)(nil), "pb.SetInitConfigRequest")
	proto.RegisterType((*SetInitConfigResponse)(nil), "pb.SetInitConfigResponse")
	proto.RegisterType((*GetDevConfigRequest)(nil), "pb.GetDevConfigRequest")
	proto.RegisterType((*GetDevConfigResponse)(nil), "pb.GetDevConfigResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DevService service

type DevServiceClient interface {
	SaveDevData(ctx context.Context, in *SaveDevDataRequest, opts ...grpc.CallOption) (*SaveDevDataResponse, error)
	GetDevConfig(ctx context.Context, in *GetDevConfigRequest, opts ...grpc.CallOption) (*GetDevConfigResponse, error)
	SetInitConfig(ctx context.Context, in *SetInitConfigRequest, opts ...grpc.CallOption) (*SetInitConfigResponse, error)
}

type devServiceClient struct {
	cc *grpc.ClientConn
}

func NewDevServiceClient(cc *grpc.ClientConn) DevServiceClient {
	return &devServiceClient{cc}
}

func (c *devServiceClient) SaveDevData(ctx context.Context, in *SaveDevDataRequest, opts ...grpc.CallOption) (*SaveDevDataResponse, error) {
	out := new(SaveDevDataResponse)
	err := grpc.Invoke(ctx, "/pb.DevService/SaveDevData", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devServiceClient) GetDevConfig(ctx context.Context, in *GetDevConfigRequest, opts ...grpc.CallOption) (*GetDevConfigResponse, error) {
	out := new(GetDevConfigResponse)
	err := grpc.Invoke(ctx, "/pb.DevService/GetDevConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devServiceClient) SetInitConfig(ctx context.Context, in *SetInitConfigRequest, opts ...grpc.CallOption) (*SetInitConfigResponse, error) {
	out := new(SetInitConfigResponse)
	err := grpc.Invoke(ctx, "/pb.DevService/SetInitConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DevService service

type DevServiceServer interface {
	SaveDevData(context.Context, *SaveDevDataRequest) (*SaveDevDataResponse, error)
	GetDevConfig(context.Context, *GetDevConfigRequest) (*GetDevConfigResponse, error)
	SetInitConfig(context.Context, *SetInitConfigRequest) (*SetInitConfigResponse, error)
}

func RegisterDevServiceServer(s *grpc.Server, srv DevServiceServer) {
	s.RegisterService(&_DevService_serviceDesc, srv)
}

func _DevService_SaveDevData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveDevDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevServiceServer).SaveDevData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DevService/SaveDevData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevServiceServer).SaveDevData(ctx, req.(*SaveDevDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevService_GetDevConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDevConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevServiceServer).GetDevConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DevService/GetDevConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevServiceServer).GetDevConfig(ctx, req.(*GetDevConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevService_SetInitConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetInitConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevServiceServer).SetInitConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DevService/SetInitConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevServiceServer).SetInitConfig(ctx, req.(*SetInitConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DevService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.DevService",
	HandlerType: (*DevServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveDevData",
			Handler:    _DevService_SaveDevData_Handler,
		},
		{
			MethodName: "GetDevConfig",
			Handler:    _DevService_GetDevConfig_Handler,
		},
		{
			MethodName: "SetInitConfig",
			Handler:    _DevService_SetInitConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fridgems.proto",
}

func init() { proto.RegisterFile("fridgems.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 454 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5d, 0x8f, 0x93, 0x40,
	0x14, 0x75, 0xa0, 0xae, 0xf5, 0xb2, 0x6b, 0xcc, 0x6c, 0x5d, 0x91, 0x98, 0xd8, 0xf0, 0xd4, 0x17,
	0x31, 0xe2, 0xcb, 0x46, 0x5f, 0x4c, 0x8a, 0x35, 0xc6, 0x18, 0x93, 0xa9, 0x7f, 0x60, 0x4a, 0xef,
	0x6e, 0x88, 0x65, 0x60, 0xe1, 0x42, 0xd2, 0x47, 0x7f, 0xa7, 0xff, 0xc4, 0x27, 0x33, 0x03, 0x74,
	0xc1, 0xe2, 0x1a, 0xdf, 0xee, 0xd7, 0xb9, 0xe7, 0xcc, 0xb9, 0x04, 0x78, 0x74, 0x55, 0x24, 0xdb,
	0x6b, 0x4c, 0xcb, 0x20, 0x2f, 0x32, 0xca, 0xb8, 0x95, 0x6f, 0xfc, 0x25, 0x3c, 0x88, 0xb0, 0xfe,
	0x82, 0x24, 0x39, 0x87, 0x09, 0xed, 0x73, 0x74, 0xd9, 0x9c, 0x2d, 0x1e, 0x0a, 0x13, 0xeb, 0x9a,
	0x92, 0x29, 0xba, 0x56, 0x53, 0xd3, 0x31, 0x7f, 0x0c, 0x76, 0x2a, 0x63, 0xd7, 0x36, 0x25, 0x1d,
	0xfa, 0xbf, 0x18, 0xc0, 0xca, 0xec, 0x8e, 0x24, 0x49, 0x7e, 0x09, 0xd3, 0x6f, 0x98, 0xe6, 0x4b,
	0x99, 0xbe, 0x76, 0xd9, 0xdc, 0x5e, 0x38, 0xe1, 0xf3, 0x20, 0xdf, 0x04, 0xb7, 0x13, 0x41, 0xd7,
	0xfe, 0xa0, 0xa8, 0xd8, 0x8b, 0xc3, 0x74, 0x0f, 0x19, 0xba, 0xd6, 0x5d, 0xc8, 0x70, 0x88, 0x0c,
	0xbd, 0x77, 0x70, 0x36, 0x58, 0xaa, 0x55, 0x7e, 0xc7, 0xbd, 0x79, 0x8c, 0x2d, 0x74, 0xc8, 0x67,
	0x70, 0xbf, 0x96, 0xbb, 0xaa, 0x79, 0x8c, 0x25, 0x9a, 0xe4, 0xad, 0x75, 0xc9, 0x7a, 0xe0, 0xf0,
	0xbf, 0xc1, 0x7e, 0x05, 0x7c, 0x2d, 0x6b, 0x8c, 0xb0, 0xd6, 0x02, 0x05, 0xde, 0x54, 0x58, 0x12,
	0xbf, 0x80, 0x13, 0x19, 0x53, 0x92, 0xa9, 0xd6, 0xce, 0x36, 0x33, 0x26, 0x27, 0xad, 0xa1, 0xb6,
	0x30, 0x31, 0x7f, 0x01, 0x93, 0x14, 0x49, 0x1a, 0x47, 0x9d, 0xd0, 0xd1, 0x2f, 0x6e, 0x6f, 0x22,
	0x4c, 0x43, 0x83, 0xb6, 0x92, 0xa4, 0x3b, 0x99, 0xb3, 0xc5, 0xa9, 0x30, 0xb1, 0xff, 0x12, 0xce,
	0x07, 0xb4, 0x65, 0x9e, 0xa9, 0x12, 0x35, 0x6f, 0x49, 0x92, 0xaa, 0xb2, 0xe3, 0x6d, 0x32, 0xff,
	0x33, 0xcc, 0xd6, 0x48, 0x9f, 0x54, 0x42, 0xcb, 0x4c, 0x5d, 0x25, 0xd7, 0x9d, 0xce, 0x4e, 0x0f,
	0x1b, 0xd1, 0x63, 0xfd, 0x45, 0x8f, 0xff, 0x0a, 0x9e, 0xfc, 0xb1, 0xec, 0x1f, 0xec, 0x3f, 0x18,
	0x9c, 0x7f, 0x44, 0x8a, 0xb0, 0x1e, 0xb2, 0x7b, 0x30, 0xa5, 0xaa, 0x50, 0xb8, 0xfd, 0xda, 0xf8,
	0x34, 0x15, 0x87, 0x9c, 0xcf, 0xc1, 0x89, 0xb3, 0xdd, 0x0e, 0x63, 0x5a, 0x15, 0x78, 0xd3, 0x1a,
	0xd6, 0x2f, 0x69, 0x74, 0x89, 0x6a, 0x6b, 0xda, 0xb6, 0x69, 0x1f, 0xf2, 0xee, 0x23, 0x9d, 0xdc,
	0x7e, 0xa4, 0x01, 0xcc, 0x86, 0x12, 0xee, 0xd6, 0x1c, 0xfe, 0x64, 0x00, 0x11, 0xd6, 0x6b, 0x2c,
	0xea, 0x24, 0x46, 0xfe, 0x1e, 0x9c, 0x9e, 0xdf, 0xfc, 0x42, 0xbb, 0x72, 0x7c, 0x77, 0xef, 0xe9,
	0x51, 0xbd, 0xa1, 0xf1, 0xef, 0xf1, 0x25, 0x9c, 0xf6, 0x05, 0x70, 0x33, 0x3a, 0xe2, 0x8a, 0xe7,
	0x1e, 0x37, 0x0e, 0x4b, 0x56, 0x70, 0x36, 0xb0, 0x9e, 0x9b, 0xe1, 0xb1, 0xd3, 0x7a, 0xcf, 0x46,
	0x3a, 0xdd, 0x9e, 0xcd, 0x89, 0xf9, 0x05, 0xbc, 0xf9, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x0c, 0xe0,
	0xde, 0x43, 0x14, 0x04, 0x00, 0x00,
}
